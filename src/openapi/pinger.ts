/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/alert": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get All
         * @description Возвращает все уведомления.
         */
        get: operations["get_all_alert_get"];
        put?: never;
        /**
         * Create
         * @description Создание уведомления.
         */
        post: operations["create_alert_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/alert/${integer}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get
         * @description Возвращает одно уведомление.
         */
        get: operations["get_alert__id__get"];
        put?: never;
        post?: never;
        /**
         * Delete
         * @description Удаление уведомления по id.
         */
        delete: operations["delete_alert__id__delete"];
        options?: never;
        head?: never;
        /**
         * Update
         * @description Обновление уведомления по id.
         */
        patch: operations["update_alert__id__patch"];
        trace?: never;
    };
    "/fetcher": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get All
         * @description Возвращает все сборщики метрик.
         */
        get: operations["get_all_fetcher_get"];
        put?: never;
        /**
         * Create
         * @description Создает новый сборщик метрик.
         */
        post: operations["create_fetcher_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/fetcher/${integer}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get
         * @description Получение одного сборщика метрик по id
         */
        get: operations["get_fetcher__id__get"];
        put?: never;
        post?: never;
        /**
         * Delete
         * @description Удаление одного сборщика метрик по id
         */
        delete: operations["delete_fetcher__id__delete"];
        options?: never;
        head?: never;
        /**
         * Update
         * @description Обновление одного сборщика метрик по id
         */
        patch: operations["update_fetcher__id__patch"];
        trace?: never;
    };
    "/metric": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get All
         * @description Получение всех метрик.
         */
        get: operations["get_all_metric_get"];
        put?: never;
        /**
         * Create
         * @description Создание метрики.
         */
        post: operations["create_metric_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/metric/${integer}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get
         * @description Получение одной метрики по id.
         */
        get: operations["get_metric__id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/receiver": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get All
         * @description Получить всех получателей уведомлений.
         */
        get: operations["get_all_receiver_get"];
        put?: never;
        /**
         * Create
         * @description Создание получателя уведомлений.
         */
        post: operations["create_receiver_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/receiver/${integer}`]: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get
         * @description Получение получателя уведомлений.
         */
        get: operations["get_receiver__id__get"];
        put?: never;
        post?: never;
        /**
         * Delete
         * @description Удаление получателя уведомлений по id.
         */
        delete: operations["delete_receiver__id__delete"];
        options?: never;
        head?: never;
        /**
         * Update
         * @description Обновление получателя уведомлений по id.
         */
        patch: operations["update_receiver__id__patch"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CreateSchema */
        aciniformes_backend__routes__alert__CreateSchema: {
            /** Data */
            data: {
                [key: string]: (string | unknown[] | Record<string, never> | boolean | number) | undefined;
            };
            /** Filter */
            filter: string;
        };
        /** PostResponseSchema */
        aciniformes_backend__routes__alert__PostResponseSchema: {
            /** Data */
            data: {
                [key: string]: (string | unknown[] | Record<string, never> | boolean | number) | undefined;
            };
            /** Filter */
            filter: string;
            /** Id */
            id?: number | null;
        };
        /** UpdateSchema */
        aciniformes_backend__routes__alert__UpdateSchema: {
            /** Data */
            data?: {
                [key: string]: (string | unknown[] | Record<string, never>) | undefined;
            } | null;
            /** Filter */
            filter?: string | null;
        };
        /** CreateSchema */
        aciniformes_backend__routes__fetcher__CreateSchema: {
            /** Address */
            address: string;
            /** Delay Fail */
            delay_fail: number;
            /** Delay Ok */
            delay_ok: number;
            /** Fetch Data */
            fetch_data: string;
            type_: components["schemas"]["FetcherType"];
        };
        /** ResponsePostSchema */
        aciniformes_backend__routes__fetcher__ResponsePostSchema: {
            /** Address */
            address: string;
            /** Delay Fail */
            delay_fail: number;
            /** Delay Ok */
            delay_ok: number;
            /** Fetch Data */
            fetch_data: string;
            /** Id */
            id?: number | null;
            type_: components["schemas"]["FetcherType"];
        };
        /** UpdateSchema */
        aciniformes_backend__routes__fetcher__UpdateSchema: {
            /** Address */
            address?: string | null;
            /** Delay Fail */
            delay_fail?: number | null;
            /** Delay Ok */
            delay_ok?: number | null;
            /** Fetch Data */
            fetch_data?: string | null;
            type_?: components["schemas"]["FetcherType"] | null;
        };
        /** CreateSchema */
        aciniformes_backend__routes__mectric__CreateSchema: {
            /** Name */
            name: string;
            /** Ok */
            ok: boolean;
            /** Time Delta */
            time_delta: number;
        };
        /** ResponsePostSchema */
        aciniformes_backend__routes__mectric__ResponsePostSchema: {
            /** Id */
            id?: number | null;
            /** Name */
            name: string;
            /** Ok */
            ok: boolean;
            /** Time Delta */
            time_delta: number;
        };
        /** CreateSchema */
        aciniformes_backend__routes__receiver__CreateSchema: {
            method: components["schemas"]["Method"];
            /** Receiver Body */
            receiver_body: {
                [key: string]: (string | number | unknown[]) | undefined;
            };
            /** Url */
            url: string;
        };
        /** PostResponseSchema */
        aciniformes_backend__routes__receiver__PostResponseSchema: {
            method: components["schemas"]["Method"];
            /** Receiver Body */
            receiver_body?: {
                [key: string]: (string | number | unknown[]) | undefined;
            } | null;
            /** Url */
            url?: string | null;
        };
        /** UpdateSchema */
        aciniformes_backend__routes__receiver__UpdateSchema: {
            method: components["schemas"]["Method"] | null;
            /** Receiver Body */
            receiver_body?: {
                [key: string]: (string | number | unknown[]) | undefined;
            } | null;
            /** Url */
            url: string | null;
        };
        /**
         * FetcherType
         * @enum {string}
         */
        FetcherType: "get" | "post" | "ping";
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * Method
         * @enum {string}
         */
        Method: "post" | "get";
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_all_alert_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    create_alert_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["aciniformes_backend__routes__alert__CreateSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aciniformes_backend__routes__alert__PostResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_alert__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_alert__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_alert__id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["aciniformes_backend__routes__alert__UpdateSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_fetcher_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    create_fetcher_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["aciniformes_backend__routes__fetcher__CreateSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aciniformes_backend__routes__fetcher__ResponsePostSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_fetcher__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_fetcher__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_fetcher__id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["aciniformes_backend__routes__fetcher__UpdateSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_metric_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    create_metric_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["aciniformes_backend__routes__mectric__CreateSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aciniformes_backend__routes__mectric__ResponsePostSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_metric__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_receiver_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    create_receiver_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["aciniformes_backend__routes__receiver__CreateSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aciniformes_backend__routes__receiver__PostResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_receiver__id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_receiver__id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_receiver__id__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["aciniformes_backend__routes__receiver__UpdateSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
